---
# Dynamic Inventory Generation Playbook
# This playbook generates Ansible inventory files based on user input

- name: Generate Dynamic Inventory for Mitum Deployment
  hosts: localhost
  gather_facts: false
  connection: local
  
  vars:
    # Variables from interactive-setup.sh (with defaults)
    target_environment: "{{ env | default('production') }}"
    total_node_count: "{{ total_nodes | default(3) }}"
    ssh_username: "{{ ssh_user | default('ubuntu') }}"
    bastion_host_ip: "{{ bastion_ip | default('') }}"
    bastion_ssh_key: "{{ bastion_key_path | default('') }}"
    nodes_ssh_key: "{{ nodes_key_path | default('') }}"
    
    # Network configuration
    ip_method: "{{ ip_config_method | default('manual') }}"
    manual_node_ips: "{{ node_ips_list | default('') }}"
    subnet_base: "{{ node_subnet | default('') }}"
    
    # Mitum configuration
    mitum_net_id: "{{ network_id | default('mitum') }}"
    mitum_model: "{{ model_type | default('mitum-currency') }}"
    
    # Features
    enable_monitoring: "{{ monitoring_enabled | default('no') }}"
    monitoring_host_ip: "{{ monitoring_ip | default('') }}"
    enable_backup: "{{ backup_enabled | default('no') }}"
    enable_ssl: "{{ ssl_enabled | default('no') }}"
    
    # Calculated paths
    inventory_path: "inventories/{{ target_environment }}/hosts.yml"
    group_vars_path: "inventories/{{ target_environment }}/group_vars/all.yml"
    
  tasks:
    - name: Display configuration summary
      debug:
        msg: |
          ========================================
          Mitum Inventory Generation
          ========================================
          Environment: {{ target_environment }}
          Node Count: {{ total_node_count }}
          IP Method: {{ ip_method }}
          Bastion IP: {{ bastion_host_ip if bastion_host_ip else '(none)' }}
          SSH User: {{ ssh_username }}
          Network ID: {{ mitum_net_id }}
          Model Type: {{ mitum_model }}
          Monitoring: {{ enable_monitoring }}
          ========================================

    - name: Ensure target environment directory exists
      file:
        path: "inventories/{{ target_environment }}"
        state: directory
        mode: '0755'

    - name: Ensure group_vars directory exists
      file:
        path: "inventories/{{ target_environment }}/group_vars"
        state: directory
        mode: '0755'

    - name: Parse manual node IPs
      set_fact:
        parsed_node_ips: "{{ manual_node_ips.split(',') if manual_node_ips else [] }}"
      when: ip_method == 'manual'

    - name: Generate subnet-based node IPs
      set_fact:
        parsed_node_ips: "{{ range(10, 10 + (total_node_count | int)) | map('string') | map('regex_replace', '^(.*)$', subnet_base + '.\\1') | list }}"
      when: ip_method == 'subnet' and subnet_base

    - name: Generate inventory file from template
      template:
        src: "../roles/mitum/templates/inventory-template.yml.j2"
        dest: "{{ inventory_path }}"
        mode: '0644'
      vars:
        mitum_environment: "{{ target_environment }}"
        mitum_node_count: "{{ total_node_count }}"
        mitum_bastion_ip: "{{ bastion_host_ip }}"
        mitum_ssh_user: "{{ ssh_username }}"
        mitum_network_id: "{{ mitum_net_id }}"
        mitum_model_type: "{{ mitum_model }}"
        mitum_bastion_key_path: "{{ bastion_ssh_key }}"
        mitum_nodes_key_path: "{{ nodes_ssh_key }}"
        node_ips_list: "{{ parsed_node_ips }}"
        monitoring_enabled: "{{ enable_monitoring }}"
        monitoring_ip: "{{ monitoring_host_ip }}"

    - name: Generate group variables file from template
      template:
        src: "../roles/mitum/templates/group-vars-template.yml.j2"
        dest: "{{ group_vars_path }}"
        mode: '0644'
      vars:
        mitum_environment: "{{ target_environment }}"
        mitum_node_count: "{{ total_node_count }}"
        mitum_network_id: "{{ mitum_net_id }}"
        mitum_model_type: "{{ mitum_model }}"
        enable_monitoring: "{{ enable_monitoring }}"
        enable_backup: "{{ enable_backup }}"
        enable_ssl: "{{ enable_ssl }}"

    - name: Display completion message
      debug:
        msg: |
          ========================================
          Inventory Generation Complete!
          ========================================
          Generated files:
          - {{ inventory_path }}
          - {{ group_vars_path }}
          
          You can now deploy using:
          ansible-playbook playbooks/site.yml -i {{ inventory_path }}
          ======================================== 