# SSH configuration for Mitum cluster access via bastion
# Generated by Ansible

# Bastion host configuration
Host bastion jump01
    HostName {{ hostvars[bastion_host]['ansible_host'] }}
    User {{ bastion_user }}
    Port {{ bastion_port }}
    IdentityFile ~/.ssh/bastion_key.pem
    ControlMaster auto
    ControlPath /tmp/ansible-ssh-%h-%p-%r.sock
    ControlPersist 30m
    ServerAliveInterval 60
    ServerAliveCountMax 3
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null

# Mitum nodes configuration
{% for node in groups['mitum_nodes'] %}
Host {{ node }}
    HostName {{ hostvars[node]['ansible_host'] }}
    User {{ hostvars[node]['ansible_user'] | default('ubuntu') }}
    Port {{ hostvars[node]['ansible_port'] | default(22) }}
    IdentityFile {{ hostvars[node]['ansible_ssh_private_key_file'] | default('~/.ssh/mitum_key.pem') }}
    ProxyJump bastion
    ControlMaster auto
    ControlPath /tmp/ansible-ssh-%h-%p-%r.sock
    ControlPersist 30m
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null

{% endfor %}

# Monitoring node configuration
{% if groups['monitoring'] is defined and groups['monitoring'] | length > 0 %}
{% for node in groups['monitoring'] %}
Host {{ node }}
    HostName {{ hostvars[node]['ansible_host'] }}
    User {{ hostvars[node]['ansible_user'] | default('ubuntu') }}
    Port {{ hostvars[node]['ansible_port'] | default(22) }}
    IdentityFile {{ hostvars[node]['ansible_ssh_private_key_file'] | default('~/.ssh/monitoring_key.pem') }}
    ProxyJump bastion
    ControlMaster auto
    ControlPath /tmp/ansible-ssh-%h-%p-%r.sock
    ControlPersist 30m
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null

{% endfor %}
{% endif %}

# Global SSH options for all hosts
Host *
    TCPKeepAlive yes
    ServerAliveInterval 60
    ServerAliveCountMax 3
    Compression yes
    LogLevel ERROR