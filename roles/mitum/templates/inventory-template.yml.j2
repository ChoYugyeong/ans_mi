---
# Mitum Ansible Inventory
# Generated: {{ lookup('pipe', 'date -u +"%Y-%m-%dT%H:%M:%SZ"') }}
# Environment: {{ mitum_environment }}
# Nodes: {{ mitum_node_count }}

all:
  vars:
    # SSH Multiplexing Configuration
    ansible_ssh_common_args: '-o ControlMaster=auto -o ControlPersist=10m -o ControlPath=~/.ansible/cp/%h-%p-%r'
    ansible_ssh_pipelining: true
    
  children:
    {% if mitum_bastion_ip %}
    bastion:
      hosts:
        bastion:
          ansible_host: {{ mitum_bastion_ip }}
          ansible_user: {{ mitum_ssh_user }}
          {% if mitum_bastion_key_path %}
          ansible_ssh_private_key_file: "{{ mitum_bastion_key_path }}"
          {% endif %}
          public_ip: {{ mitum_bastion_ip }}
          private_ip: {{ mitum_bastion_ip }}
      vars:
        # Lower disk space requirement for bastion host
        min_disk_space_gb: 5
    {% endif %}

    mitum_nodes:
      hosts:
        {% for node_ip in node_ips_list %}
        node{{ loop.index0 }}:
          ansible_host: {{ node_ip }}
          mitum_node_id: {{ loop.index0 }}
          {% if loop.index0 < (mitum_node_count | int - 1) %}
          mitum_node_type: consensus
          mitum_api_enabled: {{ 'true' if loop.index0 == 0 else 'false' }}
          {% else %}
          mitum_node_type: api
          mitum_api_enabled: true
          {% endif %}
          mitum_api_port: 54320
          mitum_node_port: {{ 4320 + loop.index0 }}
          private_ip: {{ node_ip }}
        {% endfor %}

      vars:
        ansible_user: {{ mitum_ssh_user }}
        {% if mitum_nodes_key_path %}
        ansible_ssh_private_key_file: "{{ mitum_nodes_key_path }}"
        {% endif %}
        {% if mitum_bastion_ip %}
        ansible_ssh_common_args: '-o ProxyJump=bastion -o ControlMaster=auto -o ControlPersist=10m -o ControlPath=~/.ansible/cp/%h-%p-%r'
        {% else %}
        ansible_ssh_common_args: '-o ControlMaster=auto -o ControlPersist=10m -o ControlPath=~/.ansible/cp/%h-%p-%r'
        {% endif %}
        
        # Mitum configuration
        mitum_network_id: "{{ mitum_network_id }}"
        mitum_model_type: "{{ mitum_model_type }}"
        mitum_environment: "{{ mitum_environment }}"
        
        # Network settings
        mitum_bind_host: "0.0.0.0"
        mitum_advertise_host: "{{ '{{' }} private_ip {{ '}}' }}"
        
        # Consensus settings
        mitum_consensus_threshold: 100
        mitum_interval_broadcast_ballot: "1.5s"
        mitum_wait_broadcast_ballot: "5s"
        mitum_interval_broadcast_proposal: "5s"
        mitum_wait_broadcast_proposal: "10s"
        mitum_interval_broadcast_accept: "1.5s"
        mitum_wait_broadcast_accept: "5s"

    {% if monitoring_enabled == 'yes' %}
    monitoring:
      hosts:
        monitor:
          ansible_host: {{ monitoring_ip if monitoring_ip else mitum_bastion_ip }}
          ansible_user: {{ mitum_ssh_user }}
      vars:
        {% if monitoring_ip == mitum_bastion_ip and mitum_bastion_key_path %}
        # Monitor runs on bastion, so use bastion key and lower disk req.
        ansible_ssh_private_key_file: "{{ mitum_bastion_key_path }}"
        min_disk_space_gb: 5
        {% elif mitum_nodes_key_path %}
        ansible_ssh_private_key_file: "{{ mitum_nodes_key_path }}"
        {% endif %}
        prometheus_port: 9090
        grafana_port: 3000
        alertmanager_port: 9093
    {% endif %}

    mongodb:
      hosts:
        {% for node_ip in node_ips_list %}
        node{{ loop.index0 }}:
          ansible_host: {{ node_ip }}
        {% endfor %}
      vars:
        ansible_user: {{ mitum_ssh_user }}
        {% if mitum_nodes_key_path %}
        ansible_ssh_private_key_file: "{{ mitum_nodes_key_path }}"
        {% endif %}
        {% if mitum_bastion_ip %}
        ansible_ssh_common_args: '-o ProxyJump=bastion -o ControlMaster=auto -o ControlPersist=10m -o ControlPath=~/.ansible/cp/%h-%p-%r'
        {% else %}
        ansible_ssh_common_args: '-o ControlMaster=auto -o ControlPersist=10m -o ControlPath=~/.ansible/cp/%h-%p-%r'
        {% endif %} 